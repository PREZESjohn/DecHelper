name: ai
services:
  db:
    image: timescale/timescaledb-ha:pg17
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - ollama-docker
    volumes:
      - data:/home/postgres/pgdata/data
    command: [ "-c", "ai.ollama_host=http://ollama:7869" ]
  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:v0.8.4
    environment:
      PGAI_VECTORIZER_WORKER_DB_URL: postgres://postgres:postgres@host.docker.internal:5432/postgres
      OLLAMA_HOST: http://host.docker.internal:7869
    command: [ "--poll-interval", "5s", "--log-level", "DEBUG" ]
  ollama:
    image: docker.io/ollama/ollama:latest
    ports:
      - "7869:11434"
    volumes:
      - .:/code
      - ./ollama/ollama:/root/.ollama
      - ./entrypoint.sh:/entrypoint.sh
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    networks:
      - ollama-docker
  webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: ollama-webui
    volumes:
      - ./ollama/ollama-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - "8080:8080"
    environment: # https://docs.openwebui.com/getting-started/env-configuration#default_models
      - OLLAMA_BASE_URLS=http://host.docker.internal:7869 #comma separated ollama hosts
      - ENV=dev
      - WEBUI_AUTH=False
      - WEBUI_NAME=dechelper AI
      - WEBUI_URL=http://localhost:8080
      - WEBUI_SECRET_KEY=t0p-s3cr3t
# environments for setting custom db for open webui
#      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
#      - VECTOR_DB=pgvector
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - ollama-docker
networks:
  ollama-docker:
    external: false
volumes:
  data: